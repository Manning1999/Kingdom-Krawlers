<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="_animation_builder_8cs" kind="file">
    <compoundname>AnimationBuilder.cs</compoundname>
    <innerclass refid="class_spriter2_unity_d_x_1_1_animations_1_1_animation_builder" prot="public">Spriter2UnityDX::Animations::AnimationBuilder</innerclass>
    <innernamespace refid="namespace_spriter2_unity_d_x_1_1_animations">Spriter2UnityDX::Animations</innernamespace>
    <innernamespace refid="namespace_unity_editor">UnityEditor</innernamespace>
    <innernamespace refid="namespace_unity_editor_1_1_animations">UnityEditor::Animations</innernamespace>
    <innernamespace refid="namespace_object">Object</innernamespace>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_animation_builder_8cs_1aef19bab18b9814edeef255c43e4f6bbc" prot="public" static="no">
        <type>UnityEngine.Object</type>
        <definition>using Object =  UnityEngine.Object</definition>
        <argsstring></argsstring>
        <name>Object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/manni/OneDrive/Documents/kingdomkrawlers/Project Files/Assets/Spriter2UnityDX/Editor/AnimationBuilder.cs" line="12" column="1" bodyfile="C:/Users/manni/OneDrive/Documents/kingdomkrawlers/Project Files/Assets/Spriter2UnityDX/Editor/AnimationBuilder.cs" bodystart="12" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//This<sp/>project<sp/>is<sp/>open<sp/>source.<sp/>Anyone<sp/>can<sp/>use<sp/>any<sp/>part<sp/>of<sp/>this<sp/>code<sp/>however<sp/>they<sp/>wish</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//Feel<sp/>free<sp/>to<sp/>use<sp/>this<sp/>code<sp/>in<sp/>your<sp/>own<sp/>projects,<sp/>or<sp/>expand<sp/>on<sp/>this<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//If<sp/>you<sp/>have<sp/>any<sp/>improvements<sp/>to<sp/>the<sp/>code<sp/>itself,<sp/>please<sp/>visit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//https://github.com/Dharengo/Spriter2UnityDX<sp/>and<sp/>share<sp/>your<sp/>suggestions<sp/>by<sp/>creating<sp/>a<sp/>fork</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//-Dengar/Dharengo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>UnityEngine;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>UnityEditor;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>UnityEditor.Animations;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Collections.Generic;</highlight></codeline>
<codeline lineno="12" refid="_animation_builder_8cs_1aef19bab18b9814edeef255c43e4f6bbc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="_animation_builder_8cs_1aef19bab18b9814edeef255c43e4f6bbc" kindref="member">Object</ref><sp/>=<sp/><ref refid="_animation_builder_8cs_1aef19bab18b9814edeef255c43e4f6bbc" kindref="member">UnityEngine.Object</ref>;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="namespace_spriter2_unity_d_x_1_1_animations" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Spriter2UnityDX.Animations<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Importing;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Exactly<sp/>what&apos;s<sp/>written<sp/>on<sp/>the<sp/>tin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="class_spriter2_unity_d_x_1_1_animations_1_1_animation_builder" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_spriter2_unity_d_x_1_1_animations_1_1_animation_builder" kindref="compound">AnimationBuilder</ref><sp/>:<sp/>UnityEngine.<ref refid="_animation_builder_8cs_1aef19bab18b9814edeef255c43e4f6bbc" kindref="member">Object</ref><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Only<sp/>one<sp/>of<sp/>these<sp/>is<sp/>made<sp/>for<sp/>each<sp/>Entity,<sp/>and<sp/>these<sp/>globals<sp/>are<sp/>the<sp/>same<sp/>for<sp/>every</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Animation<sp/>that<sp/>belongs<sp/>to<sp/>these<sp/>entities</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="class_spriter2_unity_d_x_1_1_animations_1_1_animation_builder_1a9edc167c48820b1889c6b2efcda7c15f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="class_spriter2_unity_d_x_1_1_scml_processing_info" kindref="compound">ScmlProcessingInfo</ref><sp/><ref refid="class_spriter2_unity_d_x_1_1_animations_1_1_animation_builder_1a9edc167c48820b1889c6b2efcda7c15f" kindref="member">ProcessingInfo</ref>;</highlight></codeline>
<codeline lineno="21" refid="class_spriter2_unity_d_x_1_1_animations_1_1_animation_builder_1ab6d96f1d08b406a492ddfdcd4bfde38e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>inf<sp/>=<sp/>float.PositiveInfinity;</highlight></codeline>
<codeline lineno="22" refid="class_spriter2_unity_d_x_1_1_animations_1_1_animation_builder_1a801c9bba463950d8ef72bccd48258049" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>IDictionary&lt;int,<sp/>IDictionary&lt;int,<sp/>Sprite&gt;&gt;<sp/><ref refid="class_spriter2_unity_d_x_1_1_animations_1_1_animation_builder_1a801c9bba463950d8ef72bccd48258049" kindref="member">Folders</ref>;</highlight></codeline>
<codeline lineno="23" refid="class_spriter2_unity_d_x_1_1_animations_1_1_animation_builder_1a2e37f586f4e8ff539be0b89377bebc25" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>IDictionary&lt;string,<sp/>Transform&gt;<sp/><ref refid="class_spriter2_unity_d_x_1_1_animations_1_1_animation_builder_1a2e37f586f4e8ff539be0b89377bebc25" kindref="member">Transforms</ref>;</highlight></codeline>
<codeline lineno="24" refid="class_spriter2_unity_d_x_1_1_animations_1_1_animation_builder_1a9b7a19fff8ba57aa30ce5bffe3339414" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_spriter2_unity_d_x_1_1_animations_1_1_animation_builder_1a9b7a19fff8ba57aa30ce5bffe3339414" kindref="member">PrefabPath</ref>;</highlight></codeline>
<codeline lineno="25" refid="class_spriter2_unity_d_x_1_1_animations_1_1_animation_builder_1a0d7558f46d0378c5d14f7ccad776d8e2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_spriter2_unity_d_x_1_1_animations_1_1_animation_builder_1a0d7558f46d0378c5d14f7ccad776d8e2" kindref="member">AnimationsPath</ref>;</highlight></codeline>
<codeline lineno="26" refid="class_spriter2_unity_d_x_1_1_animations_1_1_animation_builder_1a40d4e59017c9a9cd1a01cd6573979e37" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Transform<sp/><ref refid="class_spriter2_unity_d_x_1_1_animations_1_1_animation_builder_1a40d4e59017c9a9cd1a01cd6573979e37" kindref="member">Root</ref>;</highlight></codeline>
<codeline lineno="27" refid="class_spriter2_unity_d_x_1_1_animations_1_1_animation_builder_1af47c9df675c50cabd4697a550f0f916d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>IDictionary&lt;string,<sp/>AnimationClip&gt;<sp/>OriginalClips<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Dictionary<sp/>&lt;string,<sp/>AnimationClip&gt;<sp/>();</highlight></codeline>
<codeline lineno="28" refid="class_spriter2_unity_d_x_1_1_animations_1_1_animation_builder_1a2b742b3543d6f709bb1e6f51131d9bac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>IDictionary&lt;string,<sp/>SpatialInfo&gt;<sp/><ref refid="class_spriter2_unity_d_x_1_1_animations_1_1_animation_builder_1a2b742b3543d6f709bb1e6f51131d9bac" kindref="member">DefaultBones</ref>;</highlight></codeline>
<codeline lineno="29" refid="class_spriter2_unity_d_x_1_1_animations_1_1_animation_builder_1a24b85ec9763038468c44f01d5662fc94" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>IDictionary&lt;string,<sp/>SpriteInfo&gt;<sp/><ref refid="class_spriter2_unity_d_x_1_1_animations_1_1_animation_builder_1a24b85ec9763038468c44f01d5662fc94" kindref="member">DefaultSprites</ref>;</highlight></codeline>
<codeline lineno="30" refid="class_spriter2_unity_d_x_1_1_animations_1_1_animation_builder_1ad98561d58263bfed7dfe9cd9a5f1e249" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>AnimatorController<sp/><ref refid="class_spriter2_unity_d_x_1_1_animations_1_1_animation_builder_1ad98561d58263bfed7dfe9cd9a5f1e249" kindref="member">Controller</ref>;</highlight></codeline>
<codeline lineno="31" refid="class_spriter2_unity_d_x_1_1_animations_1_1_animation_builder_1a9aa9fea142fc9b3aa6ae3b4c84fe9d4f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ModdedController<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="class_spriter2_unity_d_x_1_1_animations_1_1_animation_builder_1a4a17fc111ed3d5557c603dfaaa3ac4f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_spriter2_unity_d_x_1_1_animations_1_1_animation_builder_1a4a17fc111ed3d5557c603dfaaa3ac4f6" kindref="member">AnimationBuilder</ref><sp/>(<ref refid="class_spriter2_unity_d_x_1_1_scml_processing_info" kindref="compound">ScmlProcessingInfo</ref><sp/>info,<sp/>IDictionary&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>IDictionary&lt;int,<sp/>Sprite&gt;&gt;<sp/>folders,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IDictionary&lt;string,<sp/>Transform&gt;<sp/>transforms,<sp/>IDictionary&lt;string,<sp/>SpatialInfo&gt;<sp/>defaultBones,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IDictionary&lt;string,<sp/>SpriteInfo&gt;<sp/>defaultSprites,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>prefabPath,<sp/>AnimatorController<sp/>controller)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ProcessingInfo<sp/>=<sp/>info;<sp/>Folders<sp/>=<sp/>folders;<sp/>Transforms<sp/>=<sp/>transforms;<sp/>PrefabPath<sp/>=<sp/>prefabPath;<sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DefaultBones<sp/>=<sp/>defaultBones;<sp/>DefaultSprites<sp/>=<sp/>defaultSprites;<sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Root<sp/>=<sp/>Transforms<sp/>[</highlight><highlight class="stringliteral">&quot;rootTransform&quot;</highlight><highlight class="normal">];<sp/>Controller<sp/>=<sp/>controller;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AnimationsPath<sp/>=<sp/>PrefabPath.Substring<sp/>(0,<sp/>PrefabPath.LastIndexOf<sp/>(</highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">))<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_Anims&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(var<sp/>item<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>GetOrigClips<sp/>())<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>clip<sp/>=<sp/>item<sp/>as<sp/>AnimationClip;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clip<sp/>!=<sp/>null)<sp/>OriginalClips<sp/>[clip.name]<sp/>=<sp/>clip;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="class_spriter2_unity_d_x_1_1_animations_1_1_animation_builder_1a7b8917cd3420f3508281c2a72abd38e2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="_animation_builder_8cs_1aef19bab18b9814edeef255c43e4f6bbc" kindref="member">Object</ref>[]<sp/><ref refid="class_spriter2_unity_d_x_1_1_animations_1_1_animation_builder_1a7b8917cd3420f3508281c2a72abd38e2" kindref="member">GetOrigClips</ref><sp/>()<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_spriter2_unity_d_x_1_1_s2_u_settings" kindref="compound">S2USettings</ref>.<ref refid="class_spriter2_unity_d_x_1_1_s2_u_settings_1a6ba9494d072158388d8340fda3d621a4" kindref="member">ImportStyle</ref>)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>AnimationImportOption.NestedInPrefab<sp/>:</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>AssetDatabase.LoadAllAssetRepresentationsAtPath(PrefabPath);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>AnimationImportOption.SeparateFolder<sp/>:</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>AssetDatabase.LoadAllAssetsAtPath(AnimationsPath);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>null;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="class_spriter2_unity_d_x_1_1_animations_1_1_animation_builder_1acd37353456dd6a5c509971df29f3a505" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spriter2_unity_d_x_1_1_animations_1_1_animation_builder_1acd37353456dd6a5c509971df29f3a505" kindref="member">Build</ref><sp/>(<ref refid="class_spriter2_unity_d_x_1_1_importing_1_1_animation" kindref="compound">Animation</ref><sp/>animation,<sp/>IDictionary&lt;int,<sp/>TimeLine&gt;<sp/>timeLines)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>clip<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>AnimationClip<sp/>();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip.name<sp/>=<sp/>animation.name;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>pendingTransforms<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Dictionary&lt;string,<sp/>Transform&gt;<sp/>(Transforms);<sp/></highlight><highlight class="comment">//This<sp/>Dictionary<sp/>will<sp/>shrink<sp/>in<sp/>size<sp/>for<sp/>every<sp/>transform</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(var<sp/>key<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>animation.mainlineKeys)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//that<sp/>is<sp/>considered<sp/>&quot;used&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>parentTimelines<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Dictionary&lt;int,<sp/>List&lt;TimeLineKey&gt;&gt;<sp/>();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>brefs<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Queue&lt;Ref&gt;<sp/>(key.boneRefs<sp/>??<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_spriter2_unity_d_x_1_1_importing_1_1_ref" kindref="compound">Ref</ref><sp/>[0]);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(brefs.Count<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>bref<sp/>=<sp/>brefs.Dequeue<sp/>();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bref.parent<sp/>&lt;<sp/>0<sp/>||<sp/>parentTimelines.ContainsKey<sp/>(bref.parent))<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>timeLine<sp/>=<sp/>timeLines<sp/>[bref.timeline];</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parentTimelines<sp/>[bref.id]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>List&lt;TimeLineKey&gt;<sp/>(timeLine.keys);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Transform<sp/><ref refid="namespace_spriter2_unity_d_x_1_1_importing_1a96c61e67d1274522095a71f81a3729c8aa57fc812a9521b8c0ede9a2724351a55" kindref="member">bone</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pendingTransforms.TryGetValue<sp/>(timeLine.name,<sp/>out<sp/>bone))<sp/>{<sp/></highlight><highlight class="comment">//Skip<sp/>it<sp/>if<sp/>it&apos;s<sp/>already<sp/>&quot;used&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>List&lt;TimeLineKey&gt;<sp/>parentTimeline;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parentTimelines.TryGetValue<sp/>(bref.parent,<sp/>out<sp/>parentTimeline);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetCurves<sp/>(bone,<sp/>DefaultBones<sp/>[timeLine.name],<sp/>parentTimeline,<sp/>timeLine,<sp/>clip,<sp/>animation);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pendingTransforms.Remove<sp/>(timeLine.name);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>brefs.Enqueue<sp/>(bref);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(var<sp/>sref<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>key.objectRefs)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>timeLine<sp/>=<sp/>timeLines<sp/>[sref.timeline];</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Transform<sp/><ref refid="namespace_spriter2_unity_d_x_1_1_importing_1a96c61e67d1274522095a71f81a3729c8ab8641287bcaf704efaaa6a226ab88131" kindref="member">sprite</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pendingTransforms.TryGetValue<sp/>(timeLine.name,<sp/>out<sp/>sprite))<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>defaultZ<sp/>=<sp/>sref.z_index;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>List&lt;TimeLineKey&gt;<sp/>parentTimeline;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parentTimelines.TryGetValue<sp/>(sref.parent,<sp/>out<sp/>parentTimeline);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetCurves<sp/>(sprite,<sp/>DefaultSprites<sp/>[timeLine.name],<sp/>parentTimeline,<sp/>timeLine,<sp/>clip,<sp/>animation,<sp/>ref<sp/>defaultZ);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetAdditionalCurves<sp/>(sprite,<sp/>animation.mainlineKeys,<sp/>timeLine,<sp/>clip,<sp/>defaultZ);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pendingTransforms.Remove<sp/>(timeLine.name);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(var<sp/>kvPair<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>pendingTransforms)<sp/>{<sp/></highlight><highlight class="comment">//Disable<sp/>the<sp/>remaining<sp/>tansforms<sp/>if<sp/>they<sp/>are<sp/>sprites<sp/>and<sp/>not<sp/>already<sp/>disabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(DefaultSprites.ContainsKey<sp/>(kvPair.Key)<sp/>&amp;&amp;<sp/>kvPair.Value.gameObject.activeSelf)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>curve<sp/>=<sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>AnimationCurve<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Keyframe<sp/>(0f,<sp/>0f,<sp/>inf,<sp/>inf));</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip.SetCurve<sp/>(GetPathToChild<sp/>(kvPair.Value),<sp/>typeof(GameObject),<sp/></highlight><highlight class="stringliteral">&quot;m_IsActive&quot;</highlight><highlight class="normal">,<sp/>curve);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>settings<sp/>=<sp/>AnimationUtility.GetAnimationClipSettings<sp/>(clip);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>settings.stopTime<sp/>=<sp/>animation.length;<sp/></highlight><highlight class="comment">//Set<sp/>the<sp/>animation&apos;s<sp/>length<sp/>and<sp/>other<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(animation.looping)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip.wrapMode<sp/>=<sp/>WrapMode.Loop;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>settings.loopTime<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>clip.wrapMode<sp/>=<sp/>WrapMode.ClampForever;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AnimationUtility.SetAnimationClipSettings<sp/>(clip,<sp/>settings);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(OriginalClips.ContainsKey<sp/>(animation.name))<sp/>{<sp/></highlight><highlight class="comment">//If<sp/>the<sp/>clip<sp/>already<sp/>exists,<sp/>copy<sp/>this<sp/>clip<sp/>into<sp/>the<sp/>old<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>oldClip<sp/>=<sp/>OriginalClips<sp/>[animation.name];</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>cachedEvents<sp/>=<sp/>oldClip.events;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EditorUtility.CopySerialized<sp/>(clip,<sp/>oldClip);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip<sp/>=<sp/>oldClip;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AnimationUtility.SetAnimationEvents<sp/>(clip,<sp/>cachedEvents);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ProcessingInfo.ModifiedAnims.Add<sp/>(clip);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_spriter2_unity_d_x_1_1_s2_u_settings" kindref="compound">S2USettings</ref>.<ref refid="class_spriter2_unity_d_x_1_1_s2_u_settings_1a6ba9494d072158388d8340fda3d621a4" kindref="member">ImportStyle</ref>)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>AnimationImportOption.NestedInPrefab<sp/>:<sp/></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AssetDatabase.AddObjectToAsset<sp/>(clip,<sp/>PrefabPath);<sp/></highlight><highlight class="comment">//Otherwise<sp/>create<sp/>a<sp/>new<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>AnimationImportOption.SeparateFolder<sp/>:</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!AssetDatabase.IsValidFolder<sp/>(AnimationsPath))<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>splitIndex<sp/>=<sp/>AnimationsPath.LastIndexOf<sp/>(</highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>path<sp/>=<sp/>AnimationsPath.Substring<sp/>(0,<sp/>splitIndex);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>newFolder<sp/>=<sp/>AnimationsPath.Substring<sp/>(splitIndex<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AssetDatabase.CreateFolder<sp/>(path,<sp/>newFolder);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AssetDatabase.CreateAsset<sp/>(clip,<sp/>string.Format<sp/>(</highlight><highlight class="stringliteral">&quot;{0}/{1}.anim&quot;</highlight><highlight class="normal">,<sp/>AnimationsPath,<sp/>clip.name));</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ProcessingInfo.NewAnims.Add<sp/>(clip);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ArrayUtility.Contains<sp/>(Controller.animationClips,<sp/>clip))<sp/>{<sp/></highlight><highlight class="comment">//Don&apos;t<sp/>add<sp/>the<sp/>clip<sp/>if<sp/>it&apos;s<sp/>already<sp/>there</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>state<sp/>=<sp/>GetStateFromController<sp/>(clip.name);<sp/></highlight><highlight class="comment">//Find<sp/>a<sp/>state<sp/>of<sp/>the<sp/>same<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state<sp/>!=<sp/>null)<sp/>state.motion<sp/>=<sp/>clip;<sp/></highlight><highlight class="comment">//If<sp/>it<sp/>exists,<sp/>replace<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>Controller.AddMotion<sp/>(clip);<sp/></highlight><highlight class="comment">//Otherwise<sp/>add<sp/>it<sp/>as<sp/>a<sp/>new<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ModdedController)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ProcessingInfo.NewControllers.Contains<sp/>(Controller)<sp/>&amp;&amp;<sp/>!ProcessingInfo.ModifiedControllers.Contains<sp/>(Controller))</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ProcessingInfo.ModifiedControllers.Add<sp/>(Controller);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ModdedController<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="class_spriter2_unity_d_x_1_1_animations_1_1_animation_builder_1ab72c03deb1751a50269a2e06dd4e8eba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spriter2_unity_d_x_1_1_animations_1_1_animation_builder_1ab72c03deb1751a50269a2e06dd4e8eba" kindref="member">SetCurves</ref><sp/>(Transform<sp/>child,<sp/><ref refid="class_spriter2_unity_d_x_1_1_importing_1_1_spatial_info" kindref="compound">SpatialInfo</ref><sp/>defaultInfo,<sp/>List&lt;TimeLineKey&gt;<sp/>parentTimeline,<sp/><ref refid="class_spriter2_unity_d_x_1_1_importing_1_1_time_line" kindref="compound">TimeLine</ref><sp/>timeLine,<sp/>AnimationClip<sp/>clip,<sp/><ref refid="class_spriter2_unity_d_x_1_1_importing_1_1_animation" kindref="compound">Animation</ref><sp/>animation)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>defZ<sp/>=<sp/>0f;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetCurves<sp/>(child,<sp/>defaultInfo,<sp/>parentTimeline,<sp/>timeLine,<sp/>clip,<sp/>animation,<sp/>ref<sp/>defZ);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="class_spriter2_unity_d_x_1_1_animations_1_1_animation_builder_1a467fb5efa54c30cc714d71f67589940f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spriter2_unity_d_x_1_1_animations_1_1_animation_builder_1a467fb5efa54c30cc714d71f67589940f" kindref="member">SetCurves</ref><sp/>(Transform<sp/>child,<sp/><ref refid="class_spriter2_unity_d_x_1_1_importing_1_1_spatial_info" kindref="compound">SpatialInfo</ref><sp/>defaultInfo,<sp/>List&lt;TimeLineKey&gt;<sp/>parentTimeline,<sp/><ref refid="class_spriter2_unity_d_x_1_1_importing_1_1_time_line" kindref="compound">TimeLine</ref><sp/>timeLine,<sp/>AnimationClip<sp/>clip,<sp/><ref refid="class_spriter2_unity_d_x_1_1_importing_1_1_animation" kindref="compound">Animation</ref><sp/>animation,<sp/>ref<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>defaultZ)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>childPath<sp/>=<sp/>GetPathToChild<sp/>(child);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(var<sp/>kvPair<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>GetCurves<sp/>(timeLine,<sp/>defaultInfo,<sp/>parentTimeline))<sp/>{<sp/></highlight><highlight class="comment">//Makes<sp/>sure<sp/>that<sp/>curves<sp/>are<sp/>only<sp/>added<sp/>for<sp/>properties<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(kvPair.Key)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//that<sp/>actually<sp/>mutate<sp/>in<sp/>the<sp/>animation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ChangedValues.PositionX<sp/>:</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetKeys<sp/>(kvPair.Value,<sp/>timeLine,<sp/>x<sp/>=&gt;<sp/>x.x,<sp/>animation);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip.SetCurve<sp/>(childPath,<sp/>typeof(Transform),<sp/></highlight><highlight class="stringliteral">&quot;localPosition.x&quot;</highlight><highlight class="normal">,<sp/>kvPair.Value);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ChangedValues.PositionY<sp/>:</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetKeys<sp/>(kvPair.Value,<sp/>timeLine,<sp/>x<sp/>=&gt;<sp/>x.y,<sp/>animation);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip.SetCurve<sp/>(childPath,<sp/>typeof(Transform),<sp/></highlight><highlight class="stringliteral">&quot;localPosition.y&quot;</highlight><highlight class="normal">,<sp/>kvPair.Value);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ChangedValues.PositionZ<sp/>:</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kvPair.Value.AddKey<sp/>(0f,<sp/>defaultZ);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip.SetCurve<sp/>(childPath,<sp/>typeof(Transform),<sp/></highlight><highlight class="stringliteral">&quot;localPosition.z&quot;</highlight><highlight class="normal">,<sp/>kvPair.Value);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>defaultZ<sp/>=<sp/>inf;<sp/></highlight><highlight class="comment">//Lets<sp/>the<sp/>next<sp/>method<sp/>know<sp/>this<sp/>value<sp/>has<sp/>been<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ChangedValues.RotationZ<sp/>:</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetKeys<sp/>(kvPair.Value,<sp/>timeLine,<sp/>x<sp/>=&gt;<sp/>x.rotation.z,<sp/>animation);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip.SetCurve<sp/>(childPath,<sp/>typeof(Transform),<sp/></highlight><highlight class="stringliteral">&quot;localRotation.z&quot;</highlight><highlight class="normal">,<sp/>kvPair.Value);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ChangedValues.RotationW<sp/>:</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetKeys<sp/>(kvPair.Value,<sp/>timeLine,<sp/>x<sp/>=&gt;<sp/>x.rotation.w,<sp/>animation);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip.SetCurve<sp/>(childPath,<sp/>typeof(Transform),<sp/></highlight><highlight class="stringliteral">&quot;localRotation.w&quot;</highlight><highlight class="normal">,<sp/>kvPair.Value);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ChangedValues.ScaleX<sp/>:</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetKeys<sp/>(kvPair.Value,<sp/>timeLine,<sp/>x<sp/>=&gt;<sp/>x.scale_x,<sp/>animation);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip.SetCurve<sp/>(childPath,<sp/>typeof(Transform),<sp/></highlight><highlight class="stringliteral">&quot;localScale.x&quot;</highlight><highlight class="normal">,<sp/>kvPair.Value);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ChangedValues.ScaleY<sp/>:</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetKeys<sp/>(kvPair.Value,<sp/>timeLine,<sp/>x<sp/>=&gt;<sp/>x.scale_y,<sp/>animation);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip.SetCurve<sp/>(childPath,<sp/>typeof(Transform),<sp/></highlight><highlight class="stringliteral">&quot;localScale.y&quot;</highlight><highlight class="normal">,<sp/>kvPair.Value);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ChangedValues.ScaleZ<sp/>:</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kvPair.Value.AddKey<sp/>(0f,<sp/>1f);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip.SetCurve<sp/>(childPath,<sp/>typeof(Transform),<sp/></highlight><highlight class="stringliteral">&quot;localScale.z&quot;</highlight><highlight class="normal">,<sp/>kvPair.Value);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ChangedValues.Alpha<sp/>:</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetKeys<sp/>(kvPair.Value,<sp/>timeLine,<sp/>x<sp/>=&gt;<sp/>x.a,<sp/>animation);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip.SetCurve<sp/>(childPath,<sp/>typeof(SpriteRenderer),<sp/></highlight><highlight class="stringliteral">&quot;m_Color.a&quot;</highlight><highlight class="normal">,<sp/>kvPair.Value);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ChangedValues.Sprite<sp/>:</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>swapper<sp/>=<sp/>child.GetComponent&lt;<ref refid="class_spriter2_unity_d_x_1_1_texture_controller" kindref="compound">TextureController</ref>&gt;<sp/>();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swapper<sp/>==<sp/>null)<sp/>{<sp/></highlight><highlight class="comment">//Add<sp/>a<sp/>Texture<sp/>Controller<sp/>if<sp/>one<sp/>doesn&apos;t<sp/>already<sp/>exist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swapper<sp/>=<sp/>child.gameObject.AddComponent&lt;<ref refid="class_spriter2_unity_d_x_1_1_texture_controller" kindref="compound">TextureController</ref>&gt;<sp/>();</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>info<sp/>=<sp/>(<ref refid="class_spriter2_unity_d_x_1_1_importing_1_1_sprite_info" kindref="compound">SpriteInfo</ref>)defaultInfo;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swapper.Sprites<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">[]<sp/>{Folders<sp/>[info.folder]<sp/>[info.file]};</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetKeys<sp/>(kvPair.Value,<sp/>timeLine,<sp/>ref<sp/>swapper.Sprites,<sp/>animation);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip.SetCurve<sp/>(childPath,<sp/>typeof(<ref refid="class_spriter2_unity_d_x_1_1_texture_controller" kindref="compound">TextureController</ref>),<sp/></highlight><highlight class="stringliteral">&quot;DisplayedSprite&quot;</highlight><highlight class="normal">,<sp/>kvPair.Value);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip.EnsureQuaternionContinuity<sp/>();</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//This<sp/>is<sp/>for<sp/>curves<sp/>that<sp/>are<sp/>tracked<sp/>slightly<sp/>differently<sp/>from<sp/>regular<sp/>curves:<sp/>Active<sp/>curve<sp/>and<sp/>Z-index<sp/>curve</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205" refid="class_spriter2_unity_d_x_1_1_animations_1_1_animation_builder_1acabc6c933746fa8066a7f4d6fddd49e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spriter2_unity_d_x_1_1_animations_1_1_animation_builder_1acabc6c933746fa8066a7f4d6fddd49e7" kindref="member">SetAdditionalCurves</ref><sp/>(Transform<sp/>child,<sp/><ref refid="class_spriter2_unity_d_x_1_1_importing_1_1_main_line_key" kindref="compound">MainLineKey</ref>[]<sp/>keys,<sp/><ref refid="class_spriter2_unity_d_x_1_1_importing_1_1_time_line" kindref="compound">TimeLine</ref><sp/>timeLine,<sp/>AnimationClip<sp/>clip,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>defaultZ)<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>positionChanged<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>kfsZ<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>List&lt;Keyframe&gt;<sp/>();</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>changedZ<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>active<sp/>=<sp/>child.gameObject.activeSelf;<sp/></highlight><highlight class="comment">//If<sp/>the<sp/>sprite<sp/>or<sp/>bone<sp/>isn&apos;t<sp/>present<sp/>in<sp/>the<sp/>mainline,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>kfsActive<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>List&lt;Keyframe&gt;<sp/>();<sp/></highlight><highlight class="comment">//Disable<sp/>the<sp/>GameObject<sp/>if<sp/>it<sp/>isn&apos;t<sp/>already<sp/>disabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>childPath<sp/>=<sp/>GetPathToChild<sp/>(child);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(var<sp/>key<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>keys)<sp/>{<sp/></highlight><highlight class="comment">//If<sp/>it<sp/>is<sp/>present,<sp/>enable<sp/>the<sp/>GameObject<sp/>if<sp/>it<sp/>isn&apos;t<sp/>already<sp/>enabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>mref<sp/>=<sp/>ArrayUtility.Find<sp/>(key.objectRefs,<sp/>x<sp/>=&gt;<sp/>x.timeline<sp/>==<sp/>timeLine.id);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mref<sp/>!=<sp/>null)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(defaultZ<sp/>==<sp/>inf)<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>defaultZ<sp/>=<sp/>mref.z_index;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>positionChanged<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!changedZ<sp/>&amp;&amp;<sp/>mref.z_index<sp/>!=<sp/>defaultZ)<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changedZ<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(key.time<sp/>&gt;<sp/>0)<sp/>kfsZ.Add<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Keyframe<sp/>(0f,<sp/>defaultZ,<sp/>inf,<sp/>inf));</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(changedZ)<sp/></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kfsZ.Add<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Keyframe<sp/>(key.time,<sp/>mref.z_index,<sp/>inf,<sp/>inf));</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!active)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kfsActive.Count<sp/>&lt;=<sp/>0<sp/>&amp;&amp;<sp/>key.time<sp/>&gt;<sp/>0)<sp/>kfsActive.Add<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Keyframe<sp/>(0f,<sp/>0f,<sp/>inf,<sp/>inf));</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kfsActive.Add<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Keyframe<sp/>(key.time,<sp/>1f,<sp/>inf,<sp/>inf));</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>active<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(active)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kfsActive.Count<sp/>&lt;=<sp/>0<sp/>&amp;&amp;<sp/>key.time<sp/>&gt;<sp/>0)<sp/>kfsActive.Add<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Keyframe<sp/>(0f,<sp/>1f,<sp/>inf,<sp/>inf));</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kfsActive.Add<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Keyframe<sp/>(key.time,<sp/>0f,<sp/>inf,<sp/>inf));</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>active<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//Only<sp/>add<sp/>these<sp/>curves<sp/>if<sp/>there<sp/>is<sp/>actually<sp/>a<sp/>mutation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kfsZ.Count<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip.SetCurve<sp/>(childPath,<sp/>typeof(Transform),<sp/></highlight><highlight class="stringliteral">&quot;localPosition.z&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>AnimationCurve<sp/>(kfsZ.ToArray<sp/>()));</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!positionChanged)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>info<sp/>=<sp/>timeLine.keys<sp/>[0].info;<sp/></highlight><highlight class="comment">//If<sp/>these<sp/>curves<sp/>don&apos;t<sp/>actually<sp/>exist,<sp/>add<sp/>some<sp/>empty<sp/>ones</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip.SetCurve<sp/>(childPath,<sp/>typeof(Transform),<sp/></highlight><highlight class="stringliteral">&quot;localPosition.x&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>AnimationCurve<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Keyframe<sp/>(0f,<sp/>info.x)));</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip.SetCurve<sp/>(childPath,<sp/>typeof(Transform),<sp/></highlight><highlight class="stringliteral">&quot;localPosition.y&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>AnimationCurve<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Keyframe<sp/>(0f,<sp/>info.y)));</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kfsActive.Count<sp/>&gt;<sp/>0)<sp/>clip.SetCurve<sp/>(childPath,<sp/>typeof(GameObject),<sp/></highlight><highlight class="stringliteral">&quot;m_IsActive&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>AnimationCurve<sp/>(kfsActive.ToArray<sp/>()));</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248" refid="class_spriter2_unity_d_x_1_1_animations_1_1_animation_builder_1a9ad7a4612cdc79cd2730cab0f00754da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spriter2_unity_d_x_1_1_animations_1_1_animation_builder_1a9ad7a4612cdc79cd2730cab0f00754da" kindref="member">SetKeys</ref><sp/>(AnimationCurve<sp/>curve,<sp/><ref refid="class_spriter2_unity_d_x_1_1_importing_1_1_time_line" kindref="compound">TimeLine</ref><sp/>timeLine,<sp/>Func&lt;SpatialInfo,<sp/>float&gt;<sp/>infoValue,<sp/><ref refid="class_spriter2_unity_d_x_1_1_importing_1_1_animation" kindref="compound">Animation</ref><sp/>animation)<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(var<sp/>key<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>timeLine.keys)<sp/>{<sp/></highlight><highlight class="comment">//Create<sp/>a<sp/>keyframe<sp/>for<sp/>every<sp/>key<sp/>on<sp/>its<sp/>personal<sp/>TimeLine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curve.AddKey<sp/>(key.time,<sp/>infoValue<sp/>(key.info));</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>lastIndex<sp/>=<sp/>(animation.looping)<sp/>?<sp/>0<sp/>:<sp/>timeLine.keys.Length<sp/>-<sp/>1;<sp/></highlight><highlight class="comment">//Depending<sp/>on<sp/>the<sp/>loop<sp/>type,<sp/>duplicate<sp/>the<sp/>first<sp/>or<sp/>last<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curve.AddKey<sp/>(animation.length,<sp/>infoValue<sp/>(timeLine.keys<sp/>[lastIndex].info));<sp/></highlight><highlight class="comment">//At<sp/>the<sp/>end<sp/>of<sp/>the<sp/>curve</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256" refid="class_spriter2_unity_d_x_1_1_animations_1_1_animation_builder_1a462aacfc1eb8fe485fc6ce84ee242b58" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spriter2_unity_d_x_1_1_animations_1_1_animation_builder_1a462aacfc1eb8fe485fc6ce84ee242b58" kindref="member">SetKeys</ref><sp/>(AnimationCurve<sp/>curve,<sp/><ref refid="class_spriter2_unity_d_x_1_1_importing_1_1_time_line" kindref="compound">TimeLine</ref><sp/>timeLine,<sp/>ref<sp/>Sprite[]<sp/>sprites,<sp/><ref refid="class_spriter2_unity_d_x_1_1_importing_1_1_animation" kindref="compound">Animation</ref><sp/>animation)<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(var<sp/>key<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>timeLine.keys)<sp/>{<sp/></highlight><highlight class="comment">//Create<sp/>a<sp/>key<sp/>for<sp/>every<sp/>key<sp/>on<sp/>its<sp/>personal<sp/>TimeLine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>info<sp/>=<sp/>(<ref refid="class_spriter2_unity_d_x_1_1_importing_1_1_sprite_info" kindref="compound">SpriteInfo</ref>)key.info;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curve.AddKey<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Keyframe<sp/>(key.time,<sp/>GetIndexOrAdd<sp/>(ref<sp/>sprites,<sp/>Folders<sp/>[info.folder]<sp/>[info.file]),<sp/>inf,<sp/>inf));</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//InTangent<sp/>and<sp/>OutTangent<sp/>are<sp/>set<sp/>to<sp/>Infinity<sp/>to<sp/>make<sp/>transitions<sp/>instant<sp/>instead<sp/>of<sp/>gradual</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>lastIndex<sp/>=<sp/>(animation.looping)<sp/>?<sp/>0<sp/>:<sp/>timeLine.keys.Length<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>lastInfo<sp/>=<sp/>(<ref refid="class_spriter2_unity_d_x_1_1_importing_1_1_sprite_info" kindref="compound">SpriteInfo</ref>)timeLine.keys<sp/>[lastIndex].info;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curve.AddKey<sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Keyframe<sp/>(animation.length,<sp/>GetIndexOrAdd<sp/>(ref<sp/>sprites,<sp/>Folders<sp/>[lastInfo.folder]<sp/>[lastInfo.file]),<sp/>inf,<sp/>inf));</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266" refid="class_spriter2_unity_d_x_1_1_animations_1_1_animation_builder_1a758149d7b3a2861987ecb719e52f33dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_spriter2_unity_d_x_1_1_animations_1_1_animation_builder_1a758149d7b3a2861987ecb719e52f33dc" kindref="member">GetIndexOrAdd</ref><sp/>(ref<sp/>Sprite[]<sp/>sprites,<sp/>Sprite<sp/>sprite)<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>index<sp/>=<sp/>ArrayUtility.IndexOf<sp/>(sprites,<sp/>sprite);<sp/></highlight><highlight class="comment">//If<sp/>the<sp/>array<sp/>already<sp/>contains<sp/>the<sp/>sprite,<sp/>return<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&lt;<sp/>0)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Otherwise,<sp/>add<sp/>sprite<sp/>to<sp/>array,<sp/>then<sp/>return<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ArrayUtility.Add<sp/>(ref<sp/>sprites,<sp/>sprite);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>ArrayUtility.IndexOf<sp/>(sprites,<sp/>sprite);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>index;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275" refid="class_spriter2_unity_d_x_1_1_animations_1_1_animation_builder_1ae23305785776d036f4b9de963ee9f43b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>AnimatorState<sp/><ref refid="class_spriter2_unity_d_x_1_1_animations_1_1_animation_builder_1ae23305785776d036f4b9de963ee9f43b" kindref="member">GetStateFromController</ref><sp/>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>clipName)<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(var<sp/>layer<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>Controller.layers)<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>state<sp/>=<sp/>GetStateFromMachine<sp/>(layer.stateMachine,<sp/>clipName);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state<sp/>!=<sp/>null)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>null;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283" refid="class_spriter2_unity_d_x_1_1_animations_1_1_animation_builder_1a605fdb79426d89ee7f3a87bf477a0a00" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>AnimatorState<sp/><ref refid="class_spriter2_unity_d_x_1_1_animations_1_1_animation_builder_1a605fdb79426d89ee7f3a87bf477a0a00" kindref="member">GetStateFromMachine</ref><sp/>(AnimatorStateMachine<sp/>machine,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>clipName)<sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(var<sp/>state<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>machine.states)<sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state.state.name<sp/>==<sp/>clipName)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state.state;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(var<sp/>cmachine<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>machine.stateMachines)<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>state<sp/>=<sp/>GetStateFromMachine<sp/>(cmachine.stateMachine,<sp/>clipName);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state!=<sp/>null)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>null;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="294" refid="class_spriter2_unity_d_x_1_1_animations_1_1_animation_builder_1acfb2f366ee2baf214ef846c6f90e4ba7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>IDictionary&lt;Transform,<sp/>string&gt;<sp/>ChildPaths<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Dictionary&lt;Transform,<sp/>string&gt;<sp/>();</highlight></codeline>
<codeline lineno="295" refid="class_spriter2_unity_d_x_1_1_animations_1_1_animation_builder_1a710db7abc867d474816fa78ce8103981" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_spriter2_unity_d_x_1_1_animations_1_1_animation_builder_1a710db7abc867d474816fa78ce8103981" kindref="member">GetPathToChild</ref><sp/>(Transform<sp/>child)<sp/>{<sp/></highlight><highlight class="comment">//Caches<sp/>the<sp/>relative<sp/>paths<sp/>to<sp/>children<sp/>so<sp/>they<sp/>only<sp/>have<sp/>to<sp/>be<sp/>calculated<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>path;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ChildPaths.TryGetValue<sp/>(child,<sp/>out<sp/>path))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>path;<sp/></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ChildPaths<sp/>[child]<sp/>=<sp/>AnimationUtility.CalculateTransformPath<sp/>(child,<sp/>Root);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301" refid="class_spriter2_unity_d_x_1_1_animations_1_1_animation_builder_1a917fecec35cad4ba2fe3733968f5d6dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="class_spriter2_unity_d_x_1_1_animations_1_1_animation_builder_1a917fecec35cad4ba2fe3733968f5d6dd" kindref="member">ChangedValues</ref><sp/>{<sp/>None,<sp/>Sprite,<sp/>PositionX,<sp/>PositionY,<sp/>PositionZ,<sp/>RotationZ,<sp/>RotationW,<sp/>ScaleX,<sp/>ScaleY,<sp/>ScaleZ,<sp/>Alpha<sp/>}</highlight></codeline>
<codeline lineno="302" refid="class_spriter2_unity_d_x_1_1_animations_1_1_animation_builder_1a4a9342b9b49d50c5273a8d615b9eff6a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>IDictionary&lt;ChangedValues,<sp/>AnimationCurve&gt;<sp/><ref refid="class_spriter2_unity_d_x_1_1_animations_1_1_animation_builder_1a4a9342b9b49d50c5273a8d615b9eff6a" kindref="member">GetCurves</ref><sp/>(<ref refid="class_spriter2_unity_d_x_1_1_importing_1_1_time_line" kindref="compound">TimeLine</ref><sp/>timeLine,<sp/><ref refid="class_spriter2_unity_d_x_1_1_importing_1_1_spatial_info" kindref="compound">SpatialInfo</ref><sp/>defaultInfo,<sp/>List&lt;TimeLineKey&gt;<sp/>parentTimeline)<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>rv<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Dictionary&lt;ChangedValues,<sp/>AnimationCurve&gt;<sp/>();<sp/></highlight><highlight class="comment">//This<sp/>method<sp/>checks<sp/>every<sp/>animatable<sp/>property<sp/>for<sp/>changes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(var<sp/>key<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>timeLine.keys)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//And<sp/>creates<sp/>a<sp/>curve<sp/>for<sp/>that<sp/>property<sp/>if<sp/>changes<sp/>are<sp/>detected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>info<sp/>=<sp/>key.info;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!info.processed)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_spriter2_unity_d_x_1_1_importing_1_1_spatial_info" kindref="compound">SpatialInfo</ref><sp/>parentInfo<sp/>=<sp/>null;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parentTimeline<sp/>!=<sp/>null)<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>pKey<sp/>=<sp/>parentTimeline.Find<sp/>(x<sp/>=&gt;<sp/>x.time<sp/>==<sp/>key.time);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pKey<sp/>==<sp/>null)<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>pKeys<sp/>=<sp/>parentTimeline.FindAll<sp/>(x<sp/>=&gt;<sp/>x.time<sp/>&lt;<sp/>key.time);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pKeys.Sort<sp/>((x,<sp/>y)<sp/>=&gt;<sp/>x.time.CompareTo<sp/>(y.time)<sp/>*<sp/>-1);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pKeys.Count<sp/>&gt;<sp/>0)<sp/>pKey<sp/>=<sp/>pKeys<sp/>[0];</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pKeys<sp/>=<sp/>parentTimeline.FindAll<sp/>(x<sp/>=&gt;<sp/>x.time<sp/>&gt;<sp/>key.time);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pKeys.Sort<sp/>((x,<sp/>y)<sp/>=&gt;<sp/>x.time.CompareTo<sp/>(y.time));</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pKeys.Count<sp/>&gt;<sp/>0)<sp/>pKey<sp/>=<sp/>pKeys<sp/>[0];</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pKey<sp/>!=<sp/>null)<sp/>parentInfo<sp/>=<sp/>pKey.info;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.Process<sp/>(parentInfo);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!rv.ContainsKey<sp/>(<ref refid="class_spriter2_unity_d_x_1_1_animations_1_1_animation_builder_1a917fecec35cad4ba2fe3733968f5d6dd" kindref="member">ChangedValues</ref>.PositionX)<sp/>&amp;&amp;<sp/>(defaultInfo.x<sp/>!=<sp/>info.x<sp/>||<sp/>defaultInfo.y<sp/>!=<sp/>info.y))<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rv<sp/>[ChangedValues.PositionX]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>AnimationCurve<sp/>();<sp/></highlight><highlight class="comment">//There<sp/>will<sp/>be<sp/>irregular<sp/>behaviour<sp/>if<sp/>curves<sp/>aren&apos;t<sp/>added<sp/>for<sp/>all<sp/>members<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rv<sp/>[ChangedValues.PositionY]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>AnimationCurve<sp/>();<sp/></highlight><highlight class="comment">//in<sp/>a<sp/>group,<sp/>so<sp/>when<sp/>one<sp/>is<sp/>set,<sp/>the<sp/>others<sp/>have<sp/>to<sp/>be<sp/>set<sp/>as<sp/>well</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rv<sp/>[ChangedValues.PositionZ]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>AnimationCurve<sp/>();</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!rv.ContainsKey<sp/>(<ref refid="class_spriter2_unity_d_x_1_1_animations_1_1_animation_builder_1a917fecec35cad4ba2fe3733968f5d6dd" kindref="member">ChangedValues</ref>.RotationZ)<sp/>&amp;&amp;<sp/>(defaultInfo.rotation.z<sp/>!=<sp/>info.rotation.z<sp/>||<sp/>defaultInfo.rotation.w<sp/>!=<sp/>info.rotation.w))<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rv<sp/>[ChangedValues.RotationZ]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>AnimationCurve<sp/>();</highlight><highlight class="comment">//x<sp/>and<sp/>y<sp/>not<sp/>necessary<sp/>since<sp/>the<sp/>default<sp/>of<sp/>0<sp/>is<sp/>fine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rv<sp/>[ChangedValues.RotationW]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>AnimationCurve<sp/>();</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!rv.ContainsKey<sp/>(<ref refid="class_spriter2_unity_d_x_1_1_animations_1_1_animation_builder_1a917fecec35cad4ba2fe3733968f5d6dd" kindref="member">ChangedValues</ref>.ScaleX)<sp/>&amp;&amp;<sp/>(defaultInfo.scale_x<sp/>!=<sp/>info.scale_x<sp/>||<sp/>defaultInfo.scale_y<sp/>!=<sp/>info.scale_y))<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rv<sp/>[ChangedValues.ScaleX]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>AnimationCurve<sp/>();</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rv<sp/>[ChangedValues.ScaleY]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>AnimationCurve<sp/>();</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rv<sp/>[ChangedValues.ScaleZ]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>AnimationCurve<sp/>();</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!rv.ContainsKey<sp/>(<ref refid="class_spriter2_unity_d_x_1_1_animations_1_1_animation_builder_1a917fecec35cad4ba2fe3733968f5d6dd" kindref="member">ChangedValues</ref>.Alpha)<sp/>&amp;&amp;<sp/>defaultInfo.a<sp/>!=<sp/>info.a)</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rv<sp/>[<ref refid="class_spriter2_unity_d_x_1_1_animations_1_1_animation_builder_1a917fecec35cad4ba2fe3733968f5d6dd" kindref="member">ChangedValues</ref>.Alpha]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>AnimationCurve<sp/>();</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>scontrol<sp/>=<sp/>defaultInfo<sp/>as<sp/><ref refid="class_spriter2_unity_d_x_1_1_importing_1_1_sprite_info" kindref="compound">SpriteInfo</ref>;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scontrol<sp/>!=<sp/>null<sp/>&amp;&amp;<sp/>!rv.ContainsKey<sp/>(<ref refid="class_spriter2_unity_d_x_1_1_animations_1_1_animation_builder_1a917fecec35cad4ba2fe3733968f5d6dd" kindref="member">ChangedValues</ref>.Sprite))<sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>sinfo<sp/>=<sp/>(SpriteInfo)info;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scontrol.file<sp/>!=<sp/>sinfo.file<sp/>||<sp/>scontrol.folder<sp/>!=<sp/>sinfo.folder)</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rv<sp/>[ChangedValues.Sprite]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>AnimationCurve<sp/>();</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/manni/OneDrive/Documents/kingdomkrawlers/Project Files/Assets/Spriter2UnityDX/Editor/AnimationBuilder.cs"/>
  </compounddef>
</doxygen>
